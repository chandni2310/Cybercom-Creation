 Started the day by watching videos
Working and execution of javascript:
javascript code-->parser-->abstract syntax tree-->machine code

Execution context:
All javascript code need envirnment in which it can executes, it is called execution context.
Execution content can be called as a box or container
The default is Global Execution context. It is associated with global object.
For browser it is window object. 
name===windows.name
Execution Context object contains:1) Variable Object
                                                       2) Scope chain
			  3) this variable
And it has 2 phases:1)Creation phase--in which VO, scope chain are created and this keyword is initialized
                                2)Execution phase--code generated by execution context is executed

Hoisting: moves declaration to the top,  variable can used before it is declared.
Hoisting dosen't works with function expression, it only works with function declaration.
eg: console.log('Before initialising '+a);
var a=12;   ---->here, even though variable 'a' is defined later, it will still run without any error--that is due to hoisting property of javascript

Imp points:
Funtions are already defined before execution starts
whereas variables are set to undefined, only after execution they are initialized.

'this' keyword:
'this' keyword basically points to objects to which it belongs.
For normal function call it refers to global object i.e windows object
Whereas for method call it refers to object that is calling the method.

Then learned about objects and methods.
Objects stores information in form of name:value pair. We can access it using methods.
To access method: objectname.Methodname()	

Loops and iteration
Learned and experimented with:for loop
		                while loop
                                                   break and continue
At last different version of Javascript, difference between all versions. Currently we are using ES5 and ES6

Learned about Content Security Policy(CSP)
CSP is used to provide security. It allows us to select which resourses are allowed in our application. Basically it provides protectin against XSS(Cross side scripting) and other such attacks.
It can be added in <meta> tag of html.
e.g.:  <meta http-equiv="Content-Security-Policy" content="default-src *://*.example.com> ---> It will allow sources from any subdomain of example.com

SCSS
Syntactically awesome stylesheet. It allow us to use nested syntax, allow us importing.

<noscript>
It can be used when browser dosen't support javascript or it is blocked.

